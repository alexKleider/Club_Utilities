# File: Utils/Pymail/README 

Wed 20 May 2020 06:38:19 PM PDT
Embarking on a rewrite of the emailing component of the utilities.
Issue(s):
    Plan to separate which MTA (Mail Transfer Agent) to use from
    which methodology (emailer: Bash or Python modules) to use.
Possible MTAs: gmail, easydns, sonic, ...
    There's the possibility of a specific account for each:
    For gmail we have the Club's account and my account.
    For now there's only the alex@kleider.ca account with easydns.com
    and akleider@sonic.net with sonic.
Possible methodologies (emailers:)
    Bash via the subprocess module or
    the python emailing modules.


Implemention is through two indepentant command line options:
'--mta'='clubg'|'akg'|'easy'|'sonic'  # Assigned to club.mta
'--emailer'='bash'|'python'           # Assigned to club.emailer

Security
========
Each mta demands security credentials (userID and password at a 
minimum) and this is handled differently by each emailer.
All credentials are kept in dot files within the user's home
directory with restricted permissions. They are:
 .msmtprc
 .muttakg, .muttclubg, .mutteasy, .muttsonic, 
 .pw.akg, .pw.clubg, .pw.easy, .pw.sonic, 
Examples (with passwords redacted) can be found in Notes/Dot/.

The Python emailer 'retrieves' passwords from the .pw.* files
thru the Pymail.config module.
The Bash emailer uses the .mutt* and .msmtprc files.
Each user must tend to these configurations for herself.
See the Examples in Notes/Dot for guidance.

--mta
=====

--emailer
=========
If emailer is "bash" the python code passes the job of sending emails
to the shell through the subprocess module using msmtp (or mutt if
attachments are involved since msmtp can't handle attachments.)
[NOTE: currently having difficulty configuring msmtp so we are
using mutt regardless of existence of attachments.]


Inspecting
==========
utils.display_emails_cmd -j <json_file> [-O -o <txt_file>]

Sending
=======
./utils.send_emails [-O --mta MTA --emailer <emailer>] -j <json_file>

Headers that I expect to implement as keys in the json file:
    From:
    Sender:
    Reply-To:
    To:
    Cc:
    Bcc:
    Subject: 
...other keys in the json file:
    body
    attachment(s)

rfc5322
=======
https://tools.ietf.org/html/rfc5322

From: John Dow <jdoe@machine.example>
Sender: Mike Jones <mjones@machine.example>
Reply-To: "Mary Smith: Personal Account" <smith@home.example>
To: Mary Smith <mary@example.net>
Cc: 
Bcc:
Subject: something


   fields          =   *(trace
                         *optional-field /
                         *(resent-date /
                          resent-from /
                          resent-sender /
                          resent-to /
                          resent-cc /
                          resent-bcc /
                          resent-msg-id))
                       *(orig-date /
                       from /
                       sender /
                       reply-to /
                       to /
                       cc /
                       bcc /
                       message-id /
                       in-reply-to /
                       references /
                       subject /
                       comments /
                       keywords /
                       optional-field)


   +----------------+--------+------------+----------------------------+
   | Field          | Min    | Max number | Notes                      |
   |                | number |            |                            |
   +----------------+--------+------------+----------------------------+
   | trace          | 0      | unlimited  | Block prepended - see      |
   |                |        |            | 3.6.7                      |
   | resent-date    | 0*     | unlimited* | One per block, required if |
   |                |        |            | other resent fields are    |
   |                |        |            | present - see 3.6.6        |
   | resent-from    | 0      | unlimited* | One per block - see 3.6.6  |
   | resent-sender  | 0*     | unlimited* | One per block, MUST occur  |
   |                |        |            | with multi-address         |
   |                |        |            | resent-from - see 3.6.6    |
   | resent-to      | 0      | unlimited* | One per block - see 3.6.6  |
   | resent-cc      | 0      | unlimited* | One per block - see 3.6.6  |
   | resent-bcc     | 0      | unlimited* | One per block - see 3.6.6  |
   | resent-msg-id  | 0      | unlimited* | One per block - see 3.6.6  |
   | orig-date      | 1      | 1          |                            |
   | from           | 1      | 1          | See sender and 3.6.2       |
   | sender         | 0*     | 1          | MUST occur with            |
   |                |        |            | multi-address from - see   |
   |                |        |            | 3.6.2                      |
   | reply-to       | 0      | 1          |                            |
   | to             | 0      | 1          |                            |
   | cc             | 0      | 1          |                            |
   | bcc            | 0      | 1          |                            |
   | message-id     | 0*     | 1          | SHOULD be present - see    |
   |                |        |            | 3.6.4                      |
   | in-reply-to    | 0*     | 1          | SHOULD occur in some       |
   |                |        |            | replies - see 3.6.4        |
   | references     | 0*     | 1          | SHOULD occur in some       |
   |                |        |            | replies - see 3.6.4        |
   | subject        | 0      | 1          |                            |
   | comments       | 0      | unlimited  |                            |
   | keywords       | 0      | unlimited  |                            |
   | optional-field | 0      | unlimited  |                            |
   +----------------+--------+------------+----------------------------+


