Options:
  -h --help  Print this docstring. Best piped through pager.
  --version  Print version.
  -A <app_spot>  Applicant data file.
  --bcc <bcc>   Comma separated listing of bcc recipients
  --cc <cc>   Comma separated listing of cc recipients
  -c <content>  The name of a file containing the body of an email.
  -C <contacts_spot>  Contacts data file.
  -d   Include details: fee inconsistency for ck_data,
  --dir <mail_dir>  The directory (to be created and/or read)
                    containing letters for batch printing.
  -e <error_file>  Specify name of a file to which an error report
            can be written.  [default: stdout]
  --emailer <emailer>  Use bash (via smtp or mutt) or python to send
                    emails.  [default: python]
  -f <format>  Specify output format of 'extra_charges' command.
        Possible choices are:
            'table' listing of names /w fees tabulated (=> 2 columns.)
            'listing' same format as Data/extra_fees.txt
            'listings' side by side lists (best use landscape mode.)
        [default: table]
  -F <function>  Name of function to apply. (new_db command)
  -i <infile>  Specify file used as input. Usually defaults to
                the MEMBERSHIP_SPoT attribute of the Club class.
  -I <included>  Specify what's to be included by specifying the key
          of the f-string to use. (See members.fstrings)
  -D   include demographic data  (see also -l option)
  -M   include meeting dates     }  These pertain to
  -B   include backers/sponsors  } applicant reports.
  -j <json>  Specify a json formated file (whether for input or output
              depends on context.)
  -l  Long format for demographics (phone & email as well as address)
  -m  Maximum data  Same as including -DMB. See also -I
  --mode <mode>   In stati command signals stati to show:
                    If not specified, all stati are reported.
                    | --mode <any string beginning with 'applic'>:
                    only applicants are reported
                    | --mode <glbs.SEPARATOR> separated list of
                    stati>: only report stati listed.
        (See -s <stati>: the two should be amalgamated.)
  --mta <mta>  Specify mail transfer agent to use. Choices are:
                clubg     club's gmail account  [default: clubg]
                akg       my gmail account
                easy      my easydns account
  -O  Show Options/commands/arguments.  Used for debugging.
  -o <outfile>  Specify destination. Choices are stdout, printer, or
                the name of a file. [default: stdout]
  --oo   Owing_Only: Only consider members with dues/fees outstanding.
            (Sets owing_only attribute of instance of Club.)
  -P <params>  This option will probably be redacted since old
            methods of mailing are no longer used.
            Defaults are A5160 for labels & E000 for envelopes.
  -p <printer>  Deals with printer variablility; ensures correct
        alignment of text when printing letters. [default: X6505_e1]
  -s <stati>     Report only the stati listed (separated by
            glbs.SEPARATOR.
            (See also --mode <mode>: the two should be amalgamated.)
  -S <sponsor_SPoL>  Specify file from which to retrieve sponsors.
  --separator <separator>  A string. [default: \f]
  --subject <subject>  The subject line of an email.
  -t <2thank>  A csv file in same format as memlist.csv showing
            recent payments.  Input for thank_cmd.
            [default: Info/2thank.csv]
  -T  Present data in columns (a Table) rather than a long list.
            Used with the 'payables' and 'show_mailing_categories
            command. May not have much effect without setting -w
            to a high number.
  -w <width>  Maximum number of characters per line in output.
            [default: 140]
  --which <letter>  Specifies type/subject of mailing.
  -x <file>  Used by commands not in use. (Expect redaction)
  -X <fees_spot>  Extra Fees data file.
